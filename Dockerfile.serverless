# Dockerfile.serverless - Optimized for RunPod Serverless
FROM nvidia/cuda:12.1-devel-ubuntu22.04

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV CUDA_VISIBLE_DEVICES=0

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3-pip \
    python3-dev \
    git \
    wget \
    curl \
    ffmpeg \
    libsndfile1 \
    libsndfile1-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create python symlink
RUN ln -s /usr/bin/python3.10 /usr/bin/python

# Set working directory
WORKDIR /app

# Copy serverless requirements first (for better Docker layer caching)
COPY requirements-serverless.txt ./

# Upgrade pip and install dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements-serverless.txt

# Copy application code
COPY . .

# Create necessary directories with proper permissions
RUN mkdir -p voices reference_audio outputs logs hf_cache && \
    chmod 755 voices reference_audio outputs logs hf_cache

# Set proper permissions for the handler
RUN chmod +x handler.py

# Set environment variables for Hugging Face cache BEFORE model download
ENV HF_HOME=/app/hf_cache
ENV HF_DATASETS_CACHE=/app/hf_cache
ENV TRANSFORMERS_CACHE=/app/hf_cache

# Create a simple Python script to download the model
RUN echo 'import os\n\
print("Pre-downloading Chatterbox model...")\n\
try:\n\
    from chatterbox import ChatterboxTTS\n\
    model = ChatterboxTTS.from_pretrained("ResembleAI/chatterbox")\n\
    print("Model pre-download successful!")\n\
    del model\n\
except Exception as e:\n\
    print(f"Model pre-download failed: {e}")\n\
    print("Model will be downloaded at runtime instead")' > /tmp/download_model.py && \
    python /tmp/download_model.py || echo "Pre-download failed, will download at runtime"

# Ensure the handler is the entry point for serverless
CMD ["python", "handler.py"]