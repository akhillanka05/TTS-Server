# # Dockerfile.serverless - Fixed version for RunPod deployment
# FROM nvidia/cuda:12.8.1-devel-ubuntu22.04

# ENV PYTHONDONTWRITEBYTECODE=1 \
#     PYTHONUNBUFFERED=1 \
#     DEBIAN_FRONTEND=noninteractive \
#     CUDA_VISIBLE_DEVICES=0 \
#     HF_HOME=/app/hf_cache

# # Install system dependencies
# RUN apt-get update && apt-get install -y --no-install-recommends \
#     build-essential \
#     libsndfile1 \
#     ffmpeg \
#     python3 \
#     python3-pip \
#     python3-dev \
#     git \
#     curl \
#     && apt-get clean \
#     && rm -rf /var/lib/apt/lists/*

# # Create symlinks for python (python3 is already Python 3.10 in Ubuntu 22.04)
# RUN ln -sf /usr/bin/python3 /usr/bin/python && \
#     ln -sf /usr/bin/pip3 /usr/bin/pip

# WORKDIR /app

# # Install PyTorch 2.6.0 first (compatible with chatterbox-tts)
# RUN pip install --no-cache-dir --upgrade pip && \
# RUN pip3 install --no-cache-dir torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

# # Install chatterbox-tts (requires torch==2.6.0)
# RUN pip install --no-cache-dir chatterbox-tts==0.1.2

# # Install remaining dependencies
# RUN pip install --no-cache-dir \
#     runpod>=1.7.0 \
#     fastapi \
#     'uvicorn[standard]' \
#     'numpy>=1.26.0,<3.0.0' \
#     soundfile \
#     librosa \
#     safetensors \
#     descript-audio-codec \
#     PyYAML \
#     python-multipart \
#     requests \
#     Jinja2 \
#     watchdog \
#     aiofiles \
#     unidecode \
#     inflect \
#     tqdm \
#     hf_transfer \
#     pydub \
#     audiotsm \
#     praat-parselmouth

# # Copy application files
# COPY . .

# # Create required directories
# RUN mkdir -p voices reference_audio outputs logs hf_cache

# # Run the handler
# CMD ["python3", "handler.py"]



FROM nvidia/cuda:12.8.1-runtime-ubuntu22.04

ARG RUNTIME=nvidia

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive
# Set the Hugging Face home directory for better model caching
ENV HF_HOME=/app/hf_cache

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libsndfile1 \
    ffmpeg \
    python3 \
    python3-pip \
    python3-dev \
    python3-venv \
    git \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create a symlink for python3 to be python for convenience
RUN ln -s /usr/bin/python3 /usr/bin/python

# Set up working directory
WORKDIR /app

# Copy requirements first to leverage Docker cache
COPY requirements.txt .

# Upgrade pip and install Python dependencies
RUN pip3 install --no-cache-dir --upgrade pip && \
    pip3 install --no-cache-dir -r requirements.txt
# Conditionally install NVIDIA dependencies if RUNTIME is set to 'nvidia'
COPY requirements-serverless.txt .

RUN if [ "$RUNTIME" = "nvidia" ]; then \
    pip3 install --no-cache-dir -r requirements-serverless.txt; \
    fi
# Copy the rest of the application code
COPY . .

# Create required directories for the application (fixed syntax error)
RUN mkdir -p model_cache reference_audio outputs voices logs hf_cache

# Expose the port the application will run on
EXPOSE 8004

# Command to run the application
CMD ["python3", "handler.py"]