# Dockerfile.serverless - Optimized for RunPod Serverless
# Using the same base image as your working Dockerfile
FROM nvidia/cuda:12.8.1-runtime-ubuntu22.04

# Set environment variables (matching your existing Dockerfile)
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive
ENV CUDA_VISIBLE_DEVICES=0

# Set the Hugging Face home directory for better model caching
ENV HF_HOME=/app/hf_cache

# Install system dependencies (same as your existing Dockerfile)
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libsndfile1 \
    ffmpeg \
    python3 \
    python3-pip \
    python3-dev \
    git \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create a symlink for python to be python for convenience
RUN ln -s /usr/bin/python3 /usr/bin/python

# Set up working directory
WORKDIR /app

# Copy requirements first to leverage Docker cache
COPY requirements-serverless.txt .

# Upgrade pip and install Python dependencies
RUN pip3 install --no-cache-dir --upgrade pip && \
    pip3 install --no-cache-dir -r requirements-serverless.txt

# Copy the application code
COPY . .

# Create necessary directories with proper permissions
RUN mkdir -p voices reference_audio outputs logs hf_cache && \
    chmod 755 voices reference_audio outputs logs hf_cache

# Set proper permissions for the handler
RUN chmod +x handler.py

# Set environment variables for Hugging Face cache
ENV HF_DATASETS_CACHE=/app/hf_cache
ENV TRANSFORMERS_CACHE=/app/hf_cache

# Pre-download the Chatterbox model to reduce cold start time
RUN echo 'import os\n\
print("Pre-downloading Chatterbox model...")\n\
try:\n\
    from chatterbox import ChatterboxTTS\n\
    model = ChatterboxTTS.from_pretrained("ResembleAI/chatterbox")\n\
    print("Model pre-download successful!")\n\
    del model\n\
except Exception as e:\n\
    print(f"Model pre-download failed: {e}")\n\
    print("Model will be downloaded at runtime instead")' > /tmp/download_model.py && \
    python /tmp/download_model.py || echo "Pre-download failed, will download at runtime"

# Ensure the handler is the entry point for serverless
CMD ["python", "handler.py"]